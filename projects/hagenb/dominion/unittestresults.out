Results for unit tests: 
cardtest1.c
----------------- Testing Card: outpost ----------------

Test #1: verify that state->outpostPlayed is incremented.
	outpost Played = 1, expected = 1	PASS

Test #2: calling outpostCard() will trigger the discardCard() function.
	The card at the current handPos should be discarded, ie, == -1
	Card at handPos 0 = 4, expected = -1	FAIL

 >>>>> SUCCESS: Testing complete outpost <<<<<

File 'dominion.c'
Lines executed:18.13% of 557
Branches executed:20.96% of 415
Taken at least once:12.77% of 415
Calls executed:9.57% of 94
Creating 'dominion.c.gcov'

cardtest2.c
----------------- Testing Card: gardens ----------------

Test: calling gardensCard will return -1.
	gardensCard() return value = -1, expected = -1	PASS

 >>>>> SUCCESS: Testing complete gardens <<<<<

File 'dominion.c'
Lines executed:17.95% of 557
Branches executed:20.96% of 415
Taken at least once:12.77% of 415
Calls executed:9.57% of 94
Creating 'dominion.c.gcov'

cardtest3.c
----------------- Testing Card: smithy ----------------

Test #1: verify that three cards were drawn.
	HandCount for this player: 9
	Cards drawn = 4, expected = 3	FAIL

Test #2: calling smithy() will trigger the discardCard() function.
	The card at the last handPos (8) should be discarded, ie, == -1
	Card at handPos 0 = -1, expected = -1	PASS
		Card at position 0 is ID 4
		Card at position 1 is ID 4
		Card at position 2 is ID 1
		Card at position 3 is ID 1
		Card at position 4 is ID 4
		Card at position 5 is ID 4
		Card at position 6 is ID 4
		Card at position 7 is ID 4
		Card at position 8 is ID -1



 >>>>> SUCCESS: Testing complete smithy <<<<<

File 'dominion.c'
Lines executed:20.47% of 557
Branches executed:22.89% of 415
Taken at least once:13.98% of 415
Calls executed:11.70% of 94
Creating 'dominion.c.gcov'

cardtest4.c
----------------- Testing Card: adventurer ----------------
TEST 1: Verify that two cards are drawn and added to hand
	Hand count = 2, expected 2	PASS

TEST 2: Verify that treasure count is equal.
Golds = 0, expected = 0	PASS
Silvers = 0, expected = 0	PASS
Coppers = 6, expected = 4	FAIL

 >>>>> SUCCESS: Testing complete adventurer <<<<<

File 'dominion.c'
Lines executed:22.08% of 557
Branches executed:25.78% of 415
Taken at least once:16.63% of 415
Calls executed:11.70% of 94
Creating 'dominion.c.gcov'

unittest1.c
----------------- TESTING handCard() -----------------

Test #1: no cards in hand. The first card should be == 0.
handCard() 1 for player 1 is 0, expected 0.
handCard() 1 for player 2 is 0, expected 0.
handCard() 1 for player 3 is 0, expected 0.
handCard() 1 for player 4 is 0, expected 0.

Test #2: 5 cards in hand, with all cards being gold (#6).
Card 1 for player 1 is 6, expected 6.
Card 2 for player 1 is 6, expected 6.
Card 3 for player 1 is 6, expected 6.
Card 4 for player 1 is 6, expected 6.
Card 5 for player 1 is 6, expected 6.
Card 5 for player 0 is 6, expected 6.
Card 1 for player 2 is 6, expected 6.
Card 2 for player 2 is 6, expected 6.
Card 3 for player 2 is 6, expected 6.
Card 4 for player 2 is 6, expected 6.
Card 5 for player 2 is 6, expected 6.
Card 5 for player 1 is 6, expected 6.
Card 1 for player 3 is 6, expected 6.
Card 2 for player 3 is 6, expected 6.
Card 3 for player 3 is 6, expected 6.
Card 4 for player 3 is 6, expected 6.
Card 5 for player 3 is 6, expected 6.
Card 5 for player 2 is 6, expected 6.
Card 1 for player 4 is 6, expected 6.
Card 2 for player 4 is 6, expected 6.
Card 3 for player 4 is 6, expected 6.
Card 4 for player 4 is 6, expected 6.
Card 5 for player 4 is 6, expected 6.
Card 5 for player 3 is 6, expected 6.

Test #3: 5 cards in hand, with all cards being treasure_map (#26).
	Card 1 for player 1 is 26, expected 26.
	Card 2 for player 1 is 26, expected 26.
	Card 3 for player 1 is 26, expected 26.
	Card 4 for player 1 is 26, expected 26.
	Card 5 for player 1 is 26, expected 26.
Card 5 for player 0 is 26, expected 26.
	Card 1 for player 2 is 26, expected 26.
	Card 2 for player 2 is 26, expected 26.
	Card 3 for player 2 is 26, expected 26.
	Card 4 for player 2 is 26, expected 26.
	Card 5 for player 2 is 26, expected 26.
Card 5 for player 1 is 26, expected 26.
	Card 1 for player 3 is 26, expected 26.
	Card 2 for player 3 is 26, expected 26.
	Card 3 for player 3 is 26, expected 26.
	Card 4 for player 3 is 26, expected 26.
	Card 5 for player 3 is 26, expected 26.
Card 5 for player 2 is 26, expected 26.
	Card 1 for player 4 is 26, expected 26.
	Card 2 for player 4 is 26, expected 26.
	Card 3 for player 4 is 26, expected 26.
	Card 4 for player 4 is 26, expected 26.
	Card 5 for player 4 is 26, expected 26.
Card 5 for player 3 is 26, expected 26.


Test #4: 5 cards in hand.
	Player 1: cards 5, 6, 7, 8, 9)
 	Player 2: cards 6, 8, 10, 12, 14
	Player 3: cards 7, 10, 13, 16, 19)
	Player 4: cards 8, 12, 16, 20, 24)

Player 1: 
	Card 1 for player 1 is 5, expected 5.  PASS
	Card 2 for player 1 is 6, expected 6.  PASS
	Card 3 for player 1 is 7, expected 7.  PASS
	Card 4 for player 1 is 8, expected 8.  PASS
	Card 5 for player 1 is 9, expected 9.  PASS
Card 5 for player 1 is 9, expected 9.PASS

Player 2: 
	Card 1 for player 2 is 6, expected 5.  FAIL
	Card 2 for player 2 is 8, expected 6.  FAIL
	Card 3 for player 2 is 10, expected 7.  FAIL
	Card 4 for player 2 is 12, expected 8.  FAIL
	Card 5 for player 2 is 14, expected 9.  FAIL
Card 5 for player 2 is 14, expected 9.FAIL

Player 3: 
	Card 1 for player 3 is 7, expected 5.  FAIL
	Card 2 for player 3 is 10, expected 6.  FAIL
	Card 3 for player 3 is 13, expected 7.  FAIL
	Card 4 for player 3 is 16, expected 8.  FAIL
	Card 5 for player 3 is 19, expected 9.  FAIL
Card 5 for player 3 is 19, expected 9.FAIL

Player 4: 
	Card 1 for player 4 is 8, expected 5.  FAIL
	Card 2 for player 4 is 12, expected 6.  FAIL
	Card 3 for player 4 is 16, expected 7.  FAIL
	Card 4 for player 4 is 20, expected 8.  FAIL
	Card 5 for player 4 is 24, expected 9.  FAIL
Card 5 for player 4 is 24, expected 9.FAIL

>>>>>>  Testing of handCard() complete. All tests passed! <<<<<<<

File 'dominion.c'
Lines executed:17.06% of 557
Branches executed:16.39% of 415
Taken at least once:13.25% of 415
Calls executed:8.51% of 94
Creating 'dominion.c.gcov'

unittest2.c
----------------- TESTING isGameOver(): -----------------
Test #1: initialize all supply counts to 0. isGameOver should be True.

isGameOver = 1, expected = 1

Test#2: initialize new game with full counts for 2 players.
isGameOver should be False.

isGameOver = 0, expected = 0

Test#3: set province card count to 0. isGameOver should be True.
Supply for card province is 0.

isGameOver = 1, expected = 1

Test#4: initialize new game ans set each card supply = 1.
isGameOver should be False.
Supply for card 0 is 1.
Supply for card 1 is 1.
Supply for card 2 is 1.
Supply for card 3 is 1.
Supply for card 4 is 1.
Supply for card 5 is 1.
Supply for card 6 is 1.
Supply for card 7 is 1.
Supply for card 8 is 1.
Supply for card 9 is 1.
Supply for card 10 is 1.
Supply for card 11 is 1.
Supply for card 12 is 1.
Supply for card 13 is 1.
Supply for card 14 is 1.
Supply for card 15 is 1.
Supply for card 16 is 1.
Supply for card 17 is 1.
Supply for card 18 is 1.
Supply for card 19 is 1.
Supply for card 20 is 1.
Supply for card 21 is 1.
Supply for card 22 is 1.
Supply for card 23 is 1.
Supply for card 24 is 1.
Supply for card 25 is 1.

isGameOver = 0, expected = 0

Test#5: In a loop that runs 300 times, randomly set three card
supplies to empty. isGameOver should be True on each iteration.
Try 1: isGameOver = 1, expected = 1
Try 2: isGameOver = 1, expected = 1
Try 3: isGameOver = 1, expected = 1
Try 4: isGameOver = 1, expected = 1
Try 5: isGameOver = 1, expected = 1
Try 6: isGameOver = 1, expected = 1
Try 7: isGameOver = 1, expected = 1
Try 8: isGameOver = 1, expected = 1
Try 9: isGameOver = 1, expected = 1
Try 10: isGameOver = 1, expected = 1
Try 11: isGameOver = 1, expected = 1
Try 12: isGameOver = 1, expected = 1
Try 13: isGameOver = 1, expected = 1
Try 14: isGameOver = 1, expected = 1
Try 15: isGameOver = 1, expected = 1
Try 16: isGameOver = 1, expected = 1
Try 17: isGameOver = 1, expected = 1
Try 18: isGameOver = 1, expected = 1
Try 19: isGameOver = 1, expected = 1
Try 20: isGameOver = 1, expected = 1
Try 21: isGameOver = 1, expected = 1
Try 22: isGameOver = 1, expected = 1
Try 23: isGameOver = 1, expected = 1
Try 24: isGameOver = 1, expected = 1
Try 25: isGameOver = 1, expected = 1
Try 26: isGameOver = 1, expected = 1
Try 27: isGameOver = 1, expected = 1
Try 28: isGameOver = 1, expected = 1
Try 29: isGameOver = 1, expected = 1
Try 30: isGameOver = 1, expected = 1
Try 31: isGameOver = 1, expected = 1
Try 32: isGameOver = 1, expected = 1
Try 33: isGameOver = 1, expected = 1
Try 34: isGameOver = 1, expected = 1
Try 35: isGameOver = 1, expected = 1
Try 36: isGameOver = 1, expected = 1
Try 37: isGameOver = 1, expected = 1
Try 38: isGameOver = 1, expected = 1
Try 39: isGameOver = 1, expected = 1
Try 40: isGameOver = 1, expected = 1
Try 41: isGameOver = 1, expected = 1
Try 42: isGameOver = 1, expected = 1
Try 43: isGameOver = 1, expected = 1
Try 44: isGameOver = 1, expected = 1
Try 45: isGameOver = 1, expected = 1
Try 46: isGameOver = 1, expected = 1
Try 47: isGameOver = 1, expected = 1
Try 48: isGameOver = 1, expected = 1
Try 49: isGameOver = 1, expected = 1
Try 50: isGameOver = 1, expected = 1
Try 51: isGameOver = 1, expected = 1
Try 52: isGameOver = 1, expected = 1
Try 53: isGameOver = 1, expected = 1
Try 54: isGameOver = 1, expected = 1
Try 55: isGameOver = 1, expected = 1
Try 56: isGameOver = 1, expected = 1
Try 57: isGameOver = 1, expected = 1
Try 58: isGameOver = 1, expected = 1
Try 59: isGameOver = 1, expected = 1
Try 60: isGameOver = 1, expected = 1
Try 61: isGameOver = 1, expected = 1
Try 62: isGameOver = 1, expected = 1
Try 63: isGameOver = 1, expected = 1
Try 64: isGameOver = 1, expected = 1
Try 65: isGameOver = 1, expected = 1
Try 66: isGameOver = 1, expected = 1
Try 67: isGameOver = 1, expected = 1
Try 68: isGameOver = 1, expected = 1
Try 69: isGameOver = 1, expected = 1
Try 70: isGameOver = 1, expected = 1
Try 71: isGameOver = 1, expected = 1
Try 72: isGameOver = 1, expected = 1
Try 73: isGameOver = 1, expected = 1
Try 74: isGameOver = 1, expected = 1
Try 75: isGameOver = 1, expected = 1
Try 76: isGameOver = 1, expected = 1
Try 77: isGameOver = 1, expected = 1
Try 78: isGameOver = 1, expected = 1
Try 79: isGameOver = 1, expected = 1
Try 80: isGameOver = 1, expected = 1
Try 81: isGameOver = 1, expected = 1
Try 82: isGameOver = 1, expected = 1
Try 83: isGameOver = 1, expected = 1
Try 84: isGameOver = 1, expected = 1
Try 85: isGameOver = 1, expected = 1
Try 86: isGameOver = 1, expected = 1
Try 87: isGameOver = 1, expected = 1
Try 88: isGameOver = 1, expected = 1
Try 89: isGameOver = 1, expected = 1
Try 90: isGameOver = 1, expected = 1
Try 91: isGameOver = 1, expected = 1
Try 92: isGameOver = 1, expected = 1
Try 93: isGameOver = 1, expected = 1
Try 94: isGameOver = 1, expected = 1
Try 95: isGameOver = 1, expected = 1
Try 96: isGameOver = 1, expected = 1
Try 97: isGameOver = 1, expected = 1
Try 98: isGameOver = 1, expected = 1
Try 99: isGameOver = 1, expected = 1
Try 100: isGameOver = 1, expected = 1
Try 101: isGameOver = 1, expected = 1
Try 102: isGameOver = 1, expected = 1
Try 103: isGameOver = 1, expected = 1
Try 104: isGameOver = 1, expected = 1
Try 105: isGameOver = 1, expected = 1
Try 106: isGameOver = 1, expected = 1
Try 107: isGameOver = 1, expected = 1
Try 108: isGameOver = 1, expected = 1
Try 109: isGameOver = 1, expected = 1
Try 110: isGameOver = 1, expected = 1
Try 111: isGameOver = 1, expected = 1
Try 112: isGameOver = 1, expected = 1
Try 113: isGameOver = 1, expected = 1
Try 114: isGameOver = 1, expected = 1
Try 115: isGameOver = 1, expected = 1
Try 116: isGameOver = 1, expected = 1
Try 117: isGameOver = 1, expected = 1
Try 118: isGameOver = 1, expected = 1
Try 119: isGameOver = 1, expected = 1
Try 120: isGameOver = 1, expected = 1
Try 121: isGameOver = 1, expected = 1
Try 122: isGameOver = 1, expected = 1
Try 123: isGameOver = 1, expected = 1
Try 124: isGameOver = 1, expected = 1
Try 125: isGameOver = 1, expected = 1
Try 126: isGameOver = 1, expected = 1
Try 127: isGameOver = 1, expected = 1
Try 128: isGameOver = 1, expected = 1
Try 129: isGameOver = 1, expected = 1
Try 130: isGameOver = 1, expected = 1
Try 131: isGameOver = 1, expected = 1
Try 132: isGameOver = 1, expected = 1
Try 133: isGameOver = 1, expected = 1
Try 134: isGameOver = 1, expected = 1
Try 135: isGameOver = 1, expected = 1
Try 136: isGameOver = 1, expected = 1
Try 137: isGameOver = 1, expected = 1
Try 138: isGameOver = 1, expected = 1
Try 139: isGameOver = 1, expected = 1
Try 140: isGameOver = 1, expected = 1
Try 141: isGameOver = 1, expected = 1
Try 142: isGameOver = 1, expected = 1
Try 143: isGameOver = 1, expected = 1
Try 144: isGameOver = 1, expected = 1
Try 145: isGameOver = 1, expected = 1
Try 146: isGameOver = 1, expected = 1
Try 147: isGameOver = 1, expected = 1
Try 148: isGameOver = 1, expected = 1
Try 149: isGameOver = 1, expected = 1
Try 150: isGameOver = 1, expected = 1
Try 151: isGameOver = 1, expected = 1
Try 152: isGameOver = 1, expected = 1
Try 153: isGameOver = 1, expected = 1
Try 154: isGameOver = 1, expected = 1
Try 155: isGameOver = 1, expected = 1
Try 156: isGameOver = 1, expected = 1
Try 157: isGameOver = 1, expected = 1
Try 158: isGameOver = 1, expected = 1
Try 159: isGameOver = 1, expected = 1
Try 160: isGameOver = 1, expected = 1
Try 161: isGameOver = 1, expected = 1
Try 162: isGameOver = 1, expected = 1
Try 163: isGameOver = 1, expected = 1
Try 164: isGameOver = 1, expected = 1
Try 165: isGameOver = 1, expected = 1
Try 166: isGameOver = 1, expected = 1
Try 167: isGameOver = 1, expected = 1
Try 168: isGameOver = 1, expected = 1
Try 169: isGameOver = 1, expected = 1
Try 170: isGameOver = 1, expected = 1
Try 171: isGameOver = 1, expected = 1
Try 172: isGameOver = 1, expected = 1
Try 173: isGameOver = 1, expected = 1
Try 174: isGameOver = 1, expected = 1
Try 175: isGameOver = 1, expected = 1
Try 176: isGameOver = 1, expected = 1
Try 177: isGameOver = 1, expected = 1
Try 178: isGameOver = 1, expected = 1
Try 179: isGameOver = 1, expected = 1
Try 180: isGameOver = 1, expected = 1
Try 181: isGameOver = 1, expected = 1
Try 182: isGameOver = 1, expected = 1
Try 183: isGameOver = 1, expected = 1
Try 184: isGameOver = 1, expected = 1
Try 185: isGameOver = 1, expected = 1
Try 186: isGameOver = 1, expected = 1
Try 187: isGameOver = 1, expected = 1
Try 188: isGameOver = 1, expected = 1
Try 189: isGameOver = 1, expected = 1
Try 190: isGameOver = 1, expected = 1
Try 191: isGameOver = 1, expected = 1
Try 192: isGameOver = 1, expected = 1
Try 193: isGameOver = 1, expected = 1
Try 194: isGameOver = 1, expected = 1
Try 195: isGameOver = 1, expected = 1
Try 196: isGameOver = 1, expected = 1
Try 197: isGameOver = 1, expected = 1
Try 198: isGameOver = 1, expected = 1
Try 199: isGameOver = 1, expected = 1
Try 200: isGameOver = 1, expected = 1
Try 201: isGameOver = 1, expected = 1
Try 202: isGameOver = 1, expected = 1
Try 203: isGameOver = 1, expected = 1
Try 204: isGameOver = 1, expected = 1
Try 205: isGameOver = 1, expected = 1
Try 206: isGameOver = 1, expected = 1
Try 207: isGameOver = 1, expected = 1
Try 208: isGameOver = 1, expected = 1
Try 209: isGameOver = 1, expected = 1
Try 210: isGameOver = 1, expected = 1
Try 211: isGameOver = 1, expected = 1
Try 212: isGameOver = 1, expected = 1
Try 213: isGameOver = 1, expected = 1
Try 214: isGameOver = 1, expected = 1
Try 215: isGameOver = 1, expected = 1
Try 216: isGameOver = 1, expected = 1
Try 217: isGameOver = 1, expected = 1
Try 218: isGameOver = 1, expected = 1
Try 219: isGameOver = 1, expected = 1
Try 220: isGameOver = 1, expected = 1
Try 221: isGameOver = 1, expected = 1
Try 222: isGameOver = 1, expected = 1
Try 223: isGameOver = 1, expected = 1
Try 224: isGameOver = 1, expected = 1
Try 225: isGameOver = 1, expected = 1
Try 226: isGameOver = 1, expected = 1
Try 227: isGameOver = 1, expected = 1
Try 228: isGameOver = 1, expected = 1
Try 229: isGameOver = 1, expected = 1
Try 230: isGameOver = 1, expected = 1
Try 231: isGameOver = 1, expected = 1
Try 232: isGameOver = 1, expected = 1
Try 233: isGameOver = 1, expected = 1
Try 234: isGameOver = 1, expected = 1
Try 235: isGameOver = 1, expected = 1
Try 236: isGameOver = 1, expected = 1
Try 237: isGameOver = 1, expected = 1
Try 238: isGameOver = 1, expected = 1
Try 239: isGameOver = 1, expected = 1
Try 240: isGameOver = 1, expected = 1
Try 241: isGameOver = 1, expected = 1
Try 242: isGameOver = 1, expected = 1
Try 243: isGameOver = 1, expected = 1
Try 244: isGameOver = 1, expected = 1
Try 245: isGameOver = 1, expected = 1
Try 246: isGameOver = 1, expected = 1
Try 247: isGameOver = 1, expected = 1
Try 248: isGameOver = 1, expected = 1
Try 249: isGameOver = 1, expected = 1
Try 250: isGameOver = 1, expected = 1
Try 251: isGameOver = 1, expected = 1
Try 252: isGameOver = 1, expected = 1
Try 253: isGameOver = 1, expected = 1
Try 254: isGameOver = 1, expected = 1
Try 255: isGameOver = 1, expected = 1
Try 256: isGameOver = 1, expected = 1
Try 257: isGameOver = 1, expected = 1
Try 258: isGameOver = 1, expected = 1
Try 259: isGameOver = 1, expected = 1
Try 260: isGameOver = 1, expected = 1
Try 261: isGameOver = 1, expected = 1
Try 262: isGameOver = 1, expected = 1
Try 263: isGameOver = 1, expected = 1
Try 264: isGameOver = 1, expected = 1
Try 265: isGameOver = 1, expected = 1
Try 266: isGameOver = 1, expected = 1
Try 267: isGameOver = 1, expected = 1
Try 268: isGameOver = 1, expected = 1
Try 269: isGameOver = 1, expected = 1
Try 270: isGameOver = 1, expected = 1
Try 271: isGameOver = 1, expected = 1
Try 272: isGameOver = 1, expected = 1
Try 273: isGameOver = 1, expected = 1
Try 274: isGameOver = 1, expected = 1
Try 275: isGameOver = 1, expected = 1
Try 276: isGameOver = 1, expected = 1
Try 277: isGameOver = 1, expected = 1
Try 278: isGameOver = 1, expected = 1
Try 279: isGameOver = 1, expected = 1
Try 280: isGameOver = 1, expected = 1
Try 281: isGameOver = 1, expected = 1
Try 282: isGameOver = 1, expected = 1
Try 283: isGameOver = 1, expected = 1
Try 284: isGameOver = 1, expected = 1
Try 285: isGameOver = 1, expected = 1
Try 286: isGameOver = 1, expected = 1
Try 287: isGameOver = 1, expected = 1
Try 288: isGameOver = 1, expected = 1
Try 289: isGameOver = 1, expected = 1
Try 290: isGameOver = 1, expected = 1
Try 291: isGameOver = 1, expected = 1
Try 292: isGameOver = 1, expected = 1
Try 293: isGameOver = 1, expected = 1
Try 294: isGameOver = 1, expected = 1
Try 295: isGameOver = 1, expected = 1
Try 296: isGameOver = 1, expected = 1
Try 297: isGameOver = 1, expected = 1
Try 298: isGameOver = 1, expected = 1
Try 299: isGameOver = 1, expected = 1
Try 300: isGameOver = 1, expected = 1

>>>>>>  Testing of isGameOver() complete. All tests passed! <<<<<<<

File 'dominion.c'
Lines executed:17.77% of 557
Branches executed:17.83% of 415
Taken at least once:14.94% of 415
Calls executed:7.45% of 94
Creating 'dominion.c.gcov'

unittest3.c
----------------- TESTING fullDeckCount():-----------------

Test #1: For Players 1 - 4, set all card counts to zero:

Player 1, card 1: count = 0, expected = 0
Player 1, card 2: count = 0, expected = 0
Player 1, card 3: count = 0, expected = 0
Player 1, card 4: count = 0, expected = 0
Player 1, card 5: count = 0, expected = 0
Player 1, card 6: count = 0, expected = 0
Player 1, card 7: count = 0, expected = 0
Player 1, card 8: count = 0, expected = 0
Player 1, card 9: count = 0, expected = 0
Player 1, card 10: count = 0, expected = 0
Player 1, card 11: count = 0, expected = 0
Player 1, card 12: count = 0, expected = 0
Player 1, card 13: count = 0, expected = 0
Player 1, card 14: count = 0, expected = 0
Player 1, card 15: count = 0, expected = 0
Player 1, card 16: count = 0, expected = 0
Player 1, card 17: count = 0, expected = 0
Player 1, card 18: count = 0, expected = 0
Player 1, card 19: count = 0, expected = 0
Player 1, card 20: count = 0, expected = 0
Player 1, card 21: count = 0, expected = 0
Player 1, card 22: count = 0, expected = 0
Player 1, card 23: count = 0, expected = 0
Player 1, card 24: count = 0, expected = 0
Player 1, card 25: count = 0, expected = 0
Player 1, card 26: count = 0, expected = 0
Player 2, card 1: count = 0, expected = 0
Player 2, card 2: count = 0, expected = 0
Player 2, card 3: count = 0, expected = 0
Player 2, card 4: count = 0, expected = 0
Player 2, card 5: count = 0, expected = 0
Player 2, card 6: count = 0, expected = 0
Player 2, card 7: count = 0, expected = 0
Player 2, card 8: count = 0, expected = 0
Player 2, card 9: count = 0, expected = 0
Player 2, card 10: count = 0, expected = 0
Player 2, card 11: count = 0, expected = 0
Player 2, card 12: count = 0, expected = 0
Player 2, card 13: count = 0, expected = 0
Player 2, card 14: count = 0, expected = 0
Player 2, card 15: count = 0, expected = 0
Player 2, card 16: count = 0, expected = 0
Player 2, card 17: count = 0, expected = 0
Player 2, card 18: count = 0, expected = 0
Player 2, card 19: count = 0, expected = 0
Player 2, card 20: count = 0, expected = 0
Player 2, card 21: count = 0, expected = 0
Player 2, card 22: count = 0, expected = 0
Player 2, card 23: count = 0, expected = 0
Player 2, card 24: count = 0, expected = 0
Player 2, card 25: count = 0, expected = 0
Player 2, card 26: count = 0, expected = 0
Player 3, card 1: count = 0, expected = 0
Player 3, card 2: count = 0, expected = 0
Player 3, card 3: count = 0, expected = 0
Player 3, card 4: count = 0, expected = 0
Player 3, card 5: count = 0, expected = 0
Player 3, card 6: count = 0, expected = 0
Player 3, card 7: count = 0, expected = 0
Player 3, card 8: count = 0, expected = 0
Player 3, card 9: count = 0, expected = 0
Player 3, card 10: count = 0, expected = 0
Player 3, card 11: count = 0, expected = 0
Player 3, card 12: count = 0, expected = 0
Player 3, card 13: count = 0, expected = 0
Player 3, card 14: count = 0, expected = 0
Player 3, card 15: count = 0, expected = 0
Player 3, card 16: count = 0, expected = 0
Player 3, card 17: count = 0, expected = 0
Player 3, card 18: count = 0, expected = 0
Player 3, card 19: count = 0, expected = 0
Player 3, card 20: count = 0, expected = 0
Player 3, card 21: count = 0, expected = 0
Player 3, card 22: count = 0, expected = 0
Player 3, card 23: count = 0, expected = 0
Player 3, card 24: count = 0, expected = 0
Player 3, card 25: count = 0, expected = 0
Player 3, card 26: count = 0, expected = 0
Player 4, card 1: count = 0, expected = 0
Player 4, card 2: count = 0, expected = 0
Player 4, card 3: count = 0, expected = 0
Player 4, card 4: count = 0, expected = 0
Player 4, card 5: count = 0, expected = 0
Player 4, card 6: count = 0, expected = 0
Player 4, card 7: count = 0, expected = 0
Player 4, card 8: count = 0, expected = 0
Player 4, card 9: count = 0, expected = 0
Player 4, card 10: count = 0, expected = 0
Player 4, card 11: count = 0, expected = 0
Player 4, card 12: count = 0, expected = 0
Player 4, card 13: count = 0, expected = 0
Player 4, card 14: count = 0, expected = 0
Player 4, card 15: count = 0, expected = 0
Player 4, card 16: count = 0, expected = 0
Player 4, card 17: count = 0, expected = 0
Player 4, card 18: count = 0, expected = 0
Player 4, card 19: count = 0, expected = 0
Player 4, card 20: count = 0, expected = 0
Player 4, card 21: count = 0, expected = 0
Player 4, card 22: count = 0, expected = 0
Player 4, card 23: count = 0, expected = 0
Player 4, card 24: count = 0, expected = 0
Player 4, card 25: count = 0, expected = 0
Player 4, card 26: count = 0, expected = 0

Test #2: Fill up the deck with 3 cards of each type. Place remaining cards in alternating deck and discard.

Player 1: fullDeckCount = 18, expected deck count is 18.
Player 1: fullDeckCount = 17, expected deck count is 17.
Player 1: fullDeckCount = 19, expected deck count is 19.
Player 1: fullDeckCount = 14, expected deck count is 14.
Player 1: fullDeckCount = 27, expected deck count is 27.
Player 1: fullDeckCount = 15, expected deck count is 15.
Player 1: fullDeckCount = 19, expected deck count is 19.
Player 1: fullDeckCount = 25, expected deck count is 25.
Player 1: fullDeckCount = 18, expected deck count is 18.
Player 1: fullDeckCount = 12, expected deck count is 12.
Player 1: fullDeckCount = 22, expected deck count is 22.
Player 1: fullDeckCount = 28, expected deck count is 28.
Player 1: fullDeckCount = 28, expected deck count is 28.
Player 1: fullDeckCount = 17, expected deck count is 17.
Player 1: fullDeckCount = 24, expected deck count is 24.
Player 1: fullDeckCount = 21, expected deck count is 21.
Player 1: fullDeckCount = 14, expected deck count is 14.
Player 1: fullDeckCount = 11, expected deck count is 11.
Player 1: fullDeckCount = 23, expected deck count is 23.
Player 1: fullDeckCount = 22, expected deck count is 22.
Player 1: fullDeckCount = 18, expected deck count is 18.
Player 1: fullDeckCount = 20, expected deck count is 20.
Player 1: fullDeckCount = 21, expected deck count is 21.
Player 1: fullDeckCount = 18, expected deck count is 18.
Player 1: fullDeckCount = 26, expected deck count is 26.
Player 1: fullDeckCount = 0, expected deck count is 0.
Player 2: fullDeckCount = 31, expected deck count is 31.
Player 2: fullDeckCount = 10, expected deck count is 10.
Player 2: fullDeckCount = 21, expected deck count is 21.
Player 2: fullDeckCount = 26, expected deck count is 26.
Player 2: fullDeckCount = 14, expected deck count is 14.
Player 2: fullDeckCount = 16, expected deck count is 16.
Player 2: fullDeckCount = 29, expected deck count is 29.
Player 2: fullDeckCount = 21, expected deck count is 21.
Player 2: fullDeckCount = 17, expected deck count is 17.
Player 2: fullDeckCount = 17, expected deck count is 17.
Player 2: fullDeckCount = 26, expected deck count is 26.
Player 2: fullDeckCount = 25, expected deck count is 25.
Player 2: fullDeckCount = 17, expected deck count is 17.
Player 2: fullDeckCount = 21, expected deck count is 21.
Player 2: fullDeckCount = 23, expected deck count is 23.
Player 2: fullDeckCount = 23, expected deck count is 23.
Player 2: fullDeckCount = 23, expected deck count is 23.
Player 2: fullDeckCount = 20, expected deck count is 20.
Player 2: fullDeckCount = 24, expected deck count is 24.
Player 2: fullDeckCount = 17, expected deck count is 17.
Player 2: fullDeckCount = 15, expected deck count is 15.
Player 2: fullDeckCount = 18, expected deck count is 18.
Player 2: fullDeckCount = 16, expected deck count is 16.
Player 2: fullDeckCount = 17, expected deck count is 17.
Player 2: fullDeckCount = 21, expected deck count is 21.
Player 2: fullDeckCount = 0, expected deck count is 0.
Player 3: fullDeckCount = 23, expected deck count is 23.
Player 3: fullDeckCount = 19, expected deck count is 19.
Player 3: fullDeckCount = 26, expected deck count is 26.
Player 3: fullDeckCount = 17, expected deck count is 17.
Player 3: fullDeckCount = 24, expected deck count is 24.
Player 3: fullDeckCount = 22, expected deck count is 22.
Player 3: fullDeckCount = 18, expected deck count is 18.
Player 3: fullDeckCount = 18, expected deck count is 18.
Player 3: fullDeckCount = 14, expected deck count is 14.
Player 3: fullDeckCount = 24, expected deck count is 24.
Player 3: fullDeckCount = 19, expected deck count is 19.
Player 3: fullDeckCount = 21, expected deck count is 21.
Player 3: fullDeckCount = 20, expected deck count is 20.
Player 3: fullDeckCount = 18, expected deck count is 18.
Player 3: fullDeckCount = 20, expected deck count is 20.
Player 3: fullDeckCount = 17, expected deck count is 17.
Player 3: fullDeckCount = 18, expected deck count is 18.
Player 3: fullDeckCount = 20, expected deck count is 20.
Player 3: fullDeckCount = 16, expected deck count is 16.
Player 3: fullDeckCount = 26, expected deck count is 26.
Player 3: fullDeckCount = 16, expected deck count is 16.
Player 3: fullDeckCount = 27, expected deck count is 27.
Player 3: fullDeckCount = 15, expected deck count is 15.
Player 3: fullDeckCount = 18, expected deck count is 18.
Player 3: fullDeckCount = 25, expected deck count is 25.
Player 3: fullDeckCount = 0, expected deck count is 0.
Player 4: fullDeckCount = 23, expected deck count is 23.
Player 4: fullDeckCount = 15, expected deck count is 15.
Player 4: fullDeckCount = 22, expected deck count is 22.
Player 4: fullDeckCount = 21, expected deck count is 21.
Player 4: fullDeckCount = 20, expected deck count is 20.
Player 4: fullDeckCount = 22, expected deck count is 22.
Player 4: fullDeckCount = 15, expected deck count is 15.
Player 4: fullDeckCount = 23, expected deck count is 23.
Player 4: fullDeckCount = 27, expected deck count is 27.
Player 4: fullDeckCount = 13, expected deck count is 13.
Player 4: fullDeckCount = 24, expected deck count is 24.
Player 4: fullDeckCount = 13, expected deck count is 13.
Player 4: fullDeckCount = 20, expected deck count is 20.
Player 4: fullDeckCount = 9, expected deck count is 9.
Player 4: fullDeckCount = 19, expected deck count is 19.
Player 4: fullDeckCount = 17, expected deck count is 17.
Player 4: fullDeckCount = 23, expected deck count is 23.
Player 4: fullDeckCount = 18, expected deck count is 18.
Player 4: fullDeckCount = 19, expected deck count is 19.
Player 4: fullDeckCount = 25, expected deck count is 25.
Player 4: fullDeckCount = 19, expected deck count is 19.
Player 4: fullDeckCount = 20, expected deck count is 20.
Player 4: fullDeckCount = 15, expected deck count is 15.
Player 4: fullDeckCount = 21, expected deck count is 21.
Player 4: fullDeckCount = 17, expected deck count is 17.
Player 4: fullDeckCount = 0, expected deck count is 0.

>>>>>>  Testing of fullDeckCount() complete. All tests passed! <<<<<<<

File 'dominion.c'
Lines executed:17.59% of 557
Branches executed:18.80% of 415
Taken at least once:15.90% of 415
Calls executed:7.45% of 94
Creating 'dominion.c.gcov'

unittest4.c
----------------- TESTING getCost(): -----------------
Test #1: Testing card numbers outside of range, eg, < 0 and > 26.
	getCost() for -3 = -1, expected -1
	getCost() for -2 = -1, expected -1
	getCost() for -1 = -1, expected -1
	getCost() for 27 = -1, expected -1
	getCost() for 28 = -1, expected -1
	getCost() for 29 = -1, expected -1

Test #2: Testing values of each card, hard-coded vs. return value from getCost().
	getCost() = 0, expected 0
	getCost() = 2, expected 2
	getCost() = 5, expected 5
	getCost() = 8, expected 8
	getCost() = 0, expected 0
	getCost() = 3, expected 3
	getCost() = 6, expected 6
	getCost() = 6, expected 6
	getCost() = 5, expected 5
	getCost() = 4, expected 4
	getCost() = 4, expected 4
	getCost() = 5, expected 5
	getCost() = 4, expected 4
	getCost() = 4, expected 4
	getCost() = 3, expected 3
	getCost() = 4, expected 4
	getCost() = 3, expected 3
	getCost() = 5, expected 5
	getCost() = 3, expected 3
	getCost() = 5, expected 5
	getCost() = 3, expected 3
	getCost() = 4, expected 4
	getCost() = 2, expected 2
	getCost() = 5, expected 5
	getCost() = 4, expected 4
	getCost() = 4, expected 4
	getCost() = 4, expected 4

>>>>>>  Testing of getCost() complete. All tests passed! <<<<<<<

File 'dominion.c'
Lines executed:5.39% of 557
Branches executed:6.75% of 415
Taken at least once:6.75% of 415
Calls executed:0.00% of 94
Creating 'dominion.c.gcov'

